/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sortrace;

import java.awt.*;
import java.io.*;
import javax.swing.*;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;

import sortrace.algoritmos.*;
import sortrace.auxiliar.TeoriaAlgoritmo;
import sortrace.auxiliar.Vector;
import sortrace.vistas.VistaVector;
import util.ayuda.IU_Ayuda;
import util.filtros.FiltroTxt;

import static java.lang.Thread.sleep;

/**
 *
 * @author usuario
 */
public class Pantalla extends javax.swing.JFrame {

    /**
     * Creates new form Pantalla
     */
    public Pantalla() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        this.setVisible(true);
        jMenuItem1 = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        panelTexto = new JTextPane();
        panelTexto2 = new JTextPane();
        boton1 = new javax.swing.JButton();
        boton2 = new javax.swing.JButton();
        boton3 = new javax.swing.JButton();
        boton4 = new javax.swing.JButton();
        boton5 = new javax.swing.JButton();
        boton6 = new javax.swing.JButton();
        boton7 = new javax.swing.JButton();
        boton8 = new javax.swing.JButton();
        boton9 = new javax.swing.JButton();
        boton10 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        panelVisualizacion = new JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuEjecucion = new javax.swing.JMenu();
        menuAlgoritmos = new javax.swing.JMenu();
        menuConfiguracion = new javax.swing.JMenu();
        menuAyuda = new javax.swing.JMenu();
        vistaVector=new VistaVector();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        boton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Introducir_Datos.png"))); // NOI18N
        boton1.setToolTipText("Introducir Datos...");
        boton1.setFocusable(false);
        boton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton1MouseClicked(evt);
            }
        });
        jToolBar1.add(boton1);

        boton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Datos_Aleatorios.png"))); // NOI18N
        boton2.setToolTipText("Generar Datos Aleatorios...");
        boton2.setFocusable(false);
        boton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton2MouseClicked(evt);
            }
        });

        jToolBar1.add(boton2);

        boton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Cargar_Datos.png"))); // NOI18N
        boton3.setToolTipText("Cargar Datos...");
        boton3.setFocusable(false);
        boton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton3MouseClicked(evt);
            }
        });
        jToolBar1.add(boton3);

        boton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Modificar_Datos.png"))); // NOI18N
        boton4.setToolTipText("Modificar Datos...");
        boton4.setFocusable(false);
        boton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton4MouseClicked(evt);
            }
        });
        jToolBar1.add(boton4);

        boton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Guardar.png"))); // NOI18N
        boton5.setToolTipText("Almacenar Ficheros...");
        boton5.setFocusable(false);
        boton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    boton5MouseClicked(evt);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        });
        jToolBar1.add(boton5);

        boton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Exportar_Imagen.png"))); // NOI18N
        boton6.setToolTipText("Exportar imagen...");
        boton6.setFocusable(false);
        boton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    boton6MouseClicked(evt);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        });
        jToolBar1.add(boton6);

        boton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Exportar_Secuencia_Imagen.png"))); // NOI18N
        boton7.setToolTipText("Exportar secuencia de imagenes...");
        boton7.setFocusable(false);
        boton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton7MouseClicked(evt);
            }
        });
        jToolBar1.add(boton7);

        boton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Exportar_Animacion.png"))); // NOI18N
        boton8.setToolTipText("Exportar animacion...");
        boton8.setFocusable(false);
        boton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton8MouseClicked(evt);
            }
        });
        jToolBar1.add(boton8);

        boton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Salir.png"))); // NOI18N
        boton9.setToolTipText("Salir");
        boton9.setFocusable(false);
        boton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton9MouseClicked(evt);
            }
        });
        jToolBar1.add(boton9);

        boton10.setFocusable(false);
        boton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton10.setVisible(false);
        boton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton10MouseClicked(evt);
            }
        });

        jToolBar1.add(boton10);



        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        /*jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("TIPO DE ALGORITMO\n\n\n\nDescripcion del algoritmo");
        jScrollPane1.setViewportView(jTextArea1);*/

        jScrollPane1.setViewportView(panelTexto);



        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Teoria", jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        /*jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("CODIGO DEL ALGORITMO    \n\n\n\nCodigo del algoritmo");*/
        jScrollPane2.setViewportView(panelTexto2);

        panelVisualizacion.setBorder(BorderFactory.createTitledBorder("selecion"));
        panelVisualizacion.setLayout(new BoxLayout(this.panelVisualizacion, 1));
        panelVisualizacion.add(this.vistaVector);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Codigo", jPanel2);

        jLayeredPane1.setBorder(new javax.swing.border.MatteBorder(null));

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jLayeredPane1.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 999, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        jMenuBar1.setFocusable(false);
        jMenuBar1.setRequestFocusEnabled(false);

        menuArchivo.setText("Archivo");
        menuArchivo.setFocusable(false);
        menuArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuArchivoMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuArchivo);
        menuArchivo.getAccessibleContext().setAccessibleDescription("");

        menuEjecucion.setText("Ejecución");
        menuEjecucion.setFocusable(false);
        menuEjecucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuEjecucionMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuEjecucion);

        menuAlgoritmos.setText("Algoritmos");
        menuAlgoritmos.setFocusable(false);
        menuAlgoritmos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAlgoritmosMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuAlgoritmos);

        menuConfiguracion.setText("Configuracion");
        menuConfiguracion.setFocusable(false);
        menuConfiguracion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuConfiguracionMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuConfiguracion);

        menuAyuda.setText("Ayuda");
        menuAyuda.setFocusable(false);
        menuAyuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAyudaMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                /*.addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)*/
                .addComponent(vistaVector, javax.swing.GroupLayout.PREFERRED_SIZE,(int)Toolkit.getDefaultToolkit().getScreenSize().getWidth()-500, javax.swing.GroupLayout.PREFERRED_SIZE))

        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jTabbedPane1))
                    /*.addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLayeredPane1))*/
                    .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(vistaVector)))
                .addContainerGap())
        );
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setBounds(100, 100, (int) dim.getWidth(), (int) dim.getHeight());
        this.setLocationRelativeTo(null);
        jTabbedPane1.getAccessibleContext().setAccessibleName("tabTeoria");
        dimPred=boton1.getMaximumSize();
        boton5.setMaximumSize(dimPred);
        boton4.setEnabled(false);
        boton5.setEnabled(false);
        boton6.setEnabled(false);
        boton7.setEnabled(false);
        boton8.setEnabled(false);
        boton9.setEnabled(false);
        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void mostrarPanelVisualizacion() {
        if (!Sortrace.getVector().isEmpty()) {
            this.vistaVector.actualizarVector();
        }

    }

    private void menuEjecucionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEjecucionMouseClicked
        jTabbedPane1.enable();
        boton1.setMaximumSize(dimPred);
        boton2.setMaximumSize(dimPred);
        boton3.setMaximumSize(dimPred);
        boton4.setMaximumSize(dimPred);
        boton5.setMaximumSize(dimPred);
        jMenuBar1.setEnabled(false);
        boton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Pausa.png")));
        boton1.setToolTipText("Pausa");
        boton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Retroceder_Comienzo.png")));
        boton2.setToolTipText("Retroceder al comienzo");
        boton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Retroceder_Iteracion.png")));
        boton3.setToolTipText("Retroceder al comienzo de la iteracion");
        boton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Retroceder_Paso.png")));
        boton4.setToolTipText("Retroceder un paso");
        boton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Retroceder_Continuo.png")));
        boton5.setToolTipText("Retroceder continuo");
        boton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Avanzar_Continuo.png")));
        boton6.setToolTipText("Avanzar continuo");
        boton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Avanzar_Paso.png")));
        boton7.setToolTipText("Avanzar un paso");
        boton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Avanzar_Iteracion.png")));
        boton8.setToolTipText("Avanzar al final de la iteracion");
        boton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Avanzar_Final.png")));
        boton9.setToolTipText("Avanzar al final");
        boton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Abandonar_Ejecucion.png")));
        boton10.setToolTipText("Abandonar ejecucion");
        boton1.setText(null);
        boton2.setText(null);
        boton3.setText(null);
        boton4.setText(null);
        boton5.setText(null);
        boton6.setText(null);
        boton7.setText(null);
        boton8.setText(null);
        boton9.setText(null);
        boton10.setText(null);
        if(!boton2.isVisible()){
            boton2.setVisible(true);
        }
        if(!boton3.isVisible()){
            boton3.setVisible(true);
        }
        if(!boton4.isVisible()){
            boton4.setVisible(true);
        }
        if(!boton5.isVisible()){
            boton5.setVisible(true);
        }
        if(!boton6.isVisible()){
            boton6.setVisible(true);
        }
        if(!boton7.isVisible()){
            boton7.setVisible(true);
        }
        if(!boton8.isVisible()){
            boton8.setVisible(true);
        }
        if(!boton9.isVisible()){
            boton9.setVisible(true);
        }
        if(!boton10.isVisible()){
            boton10.setVisible(true);
        }
        if(Sortrace.getAlgoritmo()!=null) {
            if (Sortrace.getAlgoritmo().getContinuo()) {
                boton1.setEnabled(true);
                boton2.setEnabled(false);
                boton3.setEnabled(false);
                boton4.setEnabled(false);
                boton5.setEnabled(false);
                boton6.setEnabled(false);
                boton7.setEnabled(false);
                boton8.setEnabled(false);
                boton9.setEnabled(false);
                boton10.setEnabled(true);
            } else {
                boton1.setEnabled(false);
                boton2.setEnabled(true);
                boton3.setEnabled(true);
                boton4.setEnabled(true);
                boton5.setEnabled(true);
                boton6.setEnabled(true);
                boton7.setEnabled(true);
                boton8.setEnabled(true);
                boton9.setEnabled(true);
                boton10.setEnabled(true);
            }
        }
        actualizarBotonesEjecucion();
    }//GEN-LAST:event_menuEjecucionMouseClicked

    private void menuArchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuArchivoMouseClicked
        jTabbedPane1.enable();
        boton1.setMaximumSize(dimPred);
        boton2.setMaximumSize(dimPred);
        boton3.setMaximumSize(dimPred);
        boton4.setMaximumSize(dimPred);
        boton5.setMaximumSize(dimPred);
        jMenuBar1.setEnabled(false);
        boton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Introducir_Datos.png"))); // NOI18N
        boton1.setToolTipText("Introducir Datos...");
        boton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Datos_Aleatorios.png"))); // NOI18N
        boton2.setToolTipText("Generar Datos Aleatorios...");
        boton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Cargar_Datos.png"))); // NOI18N
        boton3.setToolTipText("Cargar Datos...");
        boton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Modificar_Datos.png"))); // NOI18N
        boton4.setToolTipText("Modificar Datos...");
        boton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Guardar.png"))); // NOI18N
        boton5.setToolTipText("Almacenar Ficheros...");
        boton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Exportar_Imagen.png"))); // NOI18N
        boton6.setToolTipText("Exportar imagen...");
        boton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Exportar_Secuencia_Imagen.png"))); // NOI18N
        boton7.setToolTipText("Exportar secuencia de imagenes...");
        boton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Exportar_Animacion.png"))); // NOI18N
        boton8.setToolTipText("Exportar animacion...");
        boton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Boton_Salir.png"))); // NOI18N
        boton9.setToolTipText("Salir");
        boton1.setText(null);
        boton2.setText(null);
        boton3.setText(null);
        boton4.setText(null);
        boton5.setText(null);
        boton6.setText(null);
        boton7.setText(null);
        boton8.setText(null);
        boton9.setText(null);
        boton10.setText(null);

        boton1.setEnabled(true);
        boton2.setEnabled(true);
        boton3.setEnabled(true);
        boton4.setEnabled(true);
        boton5.setEnabled(true);
        boton6.setEnabled(true);
        boton7.setEnabled(true);
        boton8.setEnabled(true);
        boton9.setEnabled(true);
        boton10.setEnabled(true);

        if(Sortrace.getVector().getVector()==null){
            boton4.setEnabled(false);
            boton5.setEnabled(false);
            boton6.setEnabled(false);
            boton7.setEnabled(false);
            boton8.setEnabled(false);
            boton9.setEnabled(false);
        }
        if(!boton1.isVisible()){
            boton1.setVisible(true);
        }
        if(!boton2.isVisible()){
            boton2.setVisible(true);
        }
        if(!boton3.isVisible()){
            boton3.setVisible(true);
        }
        if(!boton4.isVisible()){
            boton4.setVisible(true);
        }
        if(!boton5.isVisible()){
            boton5.setVisible(true);
        }
        if(!boton6.isVisible()){
            boton6.setVisible(true);
        }
        if(!boton7.isVisible()){
            boton7.setVisible(true);
        }
        if(!boton8.isVisible()){
            boton8.setVisible(true);
        }
        if(!boton9.isVisible()){
            boton9.setVisible(true);
        }
        if(boton10.isVisible()){
            boton10.setVisible(false);
        }
    }//GEN-LAST:event_menuArchivoMouseClicked

    private void menuAlgoritmosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAlgoritmosMouseClicked
        jTabbedPane1.enable();
        jMenuBar1.setEnabled(false);
        boton1.setIcon(null);
        boton1.setText("<html><p align=\"center\">Algoritmo de</p><p align=\"center\">selección</p></html>");
        boton1.setToolTipText("Algoritmo de selección");
        boton2.setIcon(null);
        boton2.setText("<html><p align=\"center\">Algoritmo de</p><p align=\"center\">inserción</p></html>");
        boton2.setToolTipText("Algoritmo de inserción");
        boton3.setIcon(null);
        boton3.setText("<html><p align=\"center\">Burbuja</p><p align=\"center\">básica</p></html>");
        boton3.setToolTipText("Burbuja básica");
        boton4.setIcon(null);
        boton4.setText("<html><p align=\"center\">Burbuja</p><p align=\"center\">avanzada</p></html>");
        boton4.setToolTipText("Burbuja avanzada");
        boton5.setIcon(null);
        boton5.setText("<html><p align=\"center\">Incrementos</p><p align=\"center\">decrecientes</p></html>");
        boton5.setToolTipText("Incrementos decrecientes");
        boton1.setMaximumSize(new Dimension(250,300));
        boton2.setMaximumSize(new Dimension(250,300));
        boton3.setMaximumSize(new Dimension(250,300));
        boton4.setMaximumSize(new Dimension(250,300));
        boton5.setMaximumSize(new Dimension(250,300));

        boton1.setEnabled(true);
        boton2.setEnabled(true);
        boton3.setEnabled(true);
        boton4.setEnabled(true);
        boton5.setEnabled(true);
        boton6.setEnabled(true);
        boton7.setEnabled(true);
        boton8.setEnabled(true);
        boton9.setEnabled(true);
        boton10.setEnabled(true);

        if(!boton1.isVisible()){
            boton1.setVisible(true);
        }
        if(!boton2.isVisible()){
            boton2.setVisible(true);
        }
        if(!boton3.isVisible()){
            boton3.setVisible(true);
        }
        if(!boton4.isVisible()){
            boton4.setVisible(true);
        }
        if(!boton5.isVisible()){
            boton5.setVisible(true);
        }
        if(boton6.isVisible()){
            boton6.setVisible(false);
        }
        if(boton7.isVisible()){
            boton7.setVisible(false);
        }
        if(boton8.isVisible()){
            boton8.setVisible(false);
        }
        if(boton9.isVisible()){
            boton9.setVisible(false);
        }
        if(boton10.isVisible()){
            boton10.setVisible(false);
        }
    }//GEN-LAST:event_menuAlgoritmosMouseClicked



    private void menuConfiguracionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuConfiguracionMouseClicked
        jTabbedPane1.enable();
        jMenuBar1.setEnabled(false);
        boton1.setMaximumSize(dimPred);
        boton2.setMaximumSize(dimPred);
        boton3.setMaximumSize(dimPred);
        boton4.setMaximumSize(dimPred);
        boton5.setMaximumSize(dimPred);
        boton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Visualizacion.png"))); // NOI18N
        boton1.setToolTipText("Visualizacion...");
        boton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Idioma.png"))); // NOI18N
        boton2.setToolTipText("Idioma...");
        boton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/AjustesAnimacion.png"))); // NOI18N
        boton3.setToolTipText("Animacion...");

        boton1.setEnabled(true);
        boton2.setEnabled(true);
        boton3.setEnabled(true);
        boton4.setEnabled(true);
        boton5.setEnabled(true);
        boton6.setEnabled(true);
        boton7.setEnabled(true);
        boton8.setEnabled(true);
        boton9.setEnabled(true);
        boton10.setEnabled(true);

        boton1.setText(null);
        boton2.setText(null);
        boton3.setText(null);
        boton4.setText(null);
        boton5.setText(null);
        boton6.setText(null);
        boton7.setText(null);
        boton8.setText(null);
        boton9.setText(null);
        boton10.setText(null);
        if(!boton1.isVisible()){
            boton1.setVisible(true);
        }
        if(!boton2.isVisible()){
            boton2.setVisible(true);
        }
        if(!boton3.isVisible()){
            boton3.setVisible(true);
        }
        if(boton4.isVisible()){
            boton4.setVisible(false);
        }
        if(boton5.isVisible()){
            boton5.setVisible(false);
        }
        if(boton6.isVisible()){
            boton6.setVisible(false);
        }
        if(boton7.isVisible()){
            boton7.setVisible(false);
        }
        if(boton8.isVisible()){
            boton8.setVisible(false);
        }
        if(boton9.isVisible()){
            boton9.setVisible(false);
        }
        if(boton10.isVisible()){
            boton10.setVisible(false);
        }
    }//GEN-LAST:event_menuConfiguracionMouseClicked

    private void menuAyudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAyudaMouseClicked
        jTabbedPane1.enable();
        jMenuBar1.setEnabled(false);
        boton1.setMaximumSize(dimPred);
        boton2.setMaximumSize(dimPred);
        boton3.setMaximumSize(dimPred);
        boton4.setMaximumSize(dimPred);
        boton5.setMaximumSize(dimPred);
        boton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Ayuda.png"))); // NOI18N
        boton1.setToolTipText("Ayuda de Sortrace...");
        boton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/util/icon/Informacion.png"))); // NOI18N
        boton2.setToolTipText("Sobre Sortrace");

        boton1.setEnabled(true);
        boton2.setEnabled(true);
        boton3.setEnabled(true);
        boton4.setEnabled(true);
        boton5.setEnabled(true);
        boton6.setEnabled(true);
        boton7.setEnabled(true);
        boton8.setEnabled(true);
        boton9.setEnabled(true);
        boton10.setEnabled(true);

        boton1.setText(null);
        boton2.setText(null);
        boton3.setText(null);
        boton4.setText(null);
        boton5.setText(null);
        boton6.setText(null);
        boton7.setText(null);
        boton8.setText(null);
        boton9.setText(null);
        boton10.setText(null);
        if(!boton1.isVisible()){
            boton1.setVisible(true);
        }
        if(!boton2.isVisible()){
            boton2.setVisible(true);
        }
        if(boton3.isVisible()){
            boton3.setVisible(false);
        }
        if(boton4.isVisible()){
            boton4.setVisible(false);
        }
        if(boton5.isVisible()){
            boton5.setVisible(false);
        }
        if(boton6.isVisible()){
            boton6.setVisible(false);
        }
        if(boton7.isVisible()){
            boton7.setVisible(false);
        }
        if(boton8.isVisible()){
            boton8.setVisible(false);
        }
        if(boton9.isVisible()){
            boton9.setVisible(false);
        }
        if(boton10.isVisible()){
            boton10.setVisible(false);
        }
    }//GEN-LAST:event_menuAyudaMouseClicked

    private void boton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton1MouseClicked
        // TODO add your handling code here:
        //aqui
        if(boton1.getToolTipText().equals("Introducir Datos...")){
            intNum =new IntroducirNumeros_IU(false);
        }else if(boton1.getToolTipText().equals("Algoritmo de selección")){
            //panelTexto.removeAll();
            panelTexto = new JTextPane();
            panelTexto2 = new JTextPane();

            jScrollPane1.setViewportView(panelTexto);
            jScrollPane2.setViewportView(panelTexto2);

            TeoriaAlgoritmo teoriaAlgoritmo=new TeoriaAlgoritmo("seleccion");

            String[] texto=teoriaAlgoritmo.getTexto();
            String[] textoCodigo=teoriaAlgoritmo.getTextoCodigo();
            ImageIcon[] imagenes=teoriaAlgoritmo.getIcons();

            SimpleAttributeSet attrs = new SimpleAttributeSet();
            SimpleAttributeSet attrs2 = new SimpleAttributeSet();
            SimpleAttributeSet attrs3 = new SimpleAttributeSet();
            StyleConstants.setFontFamily(attrs3,"alegreya sans");
            StyleConstants.setFontSize(attrs3,14);
            StyleConstants.setBold(attrs2, true);
            StyleConstants.setAlignment(attrs2,StyleConstants.ALIGN_CENTER);
            StyleConstants.setFontFamily(attrs2,"alegreya sans");
            StyleConstants.setFontSize(attrs2,18);
            try {
                panelTexto.getStyledDocument().insertString(
                        panelTexto.getStyledDocument().getLength(), "Algoritmo de seleccion\n\n", attrs2);
                panelTexto2.getStyledDocument().insertString(
                        panelTexto2.getStyledDocument().getLength(), "Algoritmo de seleccion\n\n", attrs2);
            } catch (BadLocationException e) {
                e.printStackTrace();
            }
            for(int i=0;i<texto.length;i++){
                try {
                    panelTexto.getStyledDocument().insertString(
                            panelTexto.getStyledDocument().getLength(), texto[i], attrs);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
                if(i<imagenes.length) {
                    panelTexto.setCaretPosition(panelTexto.getStyledDocument().getLength());
                    panelTexto.insertIcon(imagenes[i]);

                }
            }
            for(int i=0;i<textoCodigo.length;i++){
                try {
                    panelTexto2.getStyledDocument().insertString(
                            panelTexto2.getStyledDocument().getLength(), textoCodigo[i], attrs3);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
            }
            panelTexto.setCaretPosition(0);
            panelTexto2.setCaretPosition(0);

            Sortrace.setAlgoritmo(new Seleccion(Sortrace.getVector().getVector()));
            Sortrace.getAlgoritmo().ejecutar();
            vistaVector.actualizarVector();
        }else if(boton1.getToolTipText().equals("Ayuda de Sortrace...")){
            new IU_Ayuda();
        }else if(boton1.getToolTipText().equals("Pausa")){
            try {
                Sortrace.getAlgoritmo().pause();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            this.mostrarPanelVisualizacion();
            boton1.setEnabled(false);
            boton2.setEnabled(true);
            boton3.setEnabled(true);
            boton4.setEnabled(true);
            boton5.setEnabled(true);
            boton6.setEnabled(true);
            boton7.setEnabled(true);
            boton8.setEnabled(true);
            boton9.setEnabled(true);
            boton10.setEnabled(true);

            actualizarBotonesEjecucion();
        }

    }//GEN-LAST:event_boton1MouseClicked


    private void boton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton2MouseClicked
        // TODO add your handling code here:
        if(boton2.getToolTipText().equals("Generar Datos Aleatorios...")){
            new GenerarDatosAleatorios_IU();
        }else if(boton2.getToolTipText().equals("Algoritmo de inserción")){
            //panelTexto.removeAll();
            panelTexto = new JTextPane();
            panelTexto2 = new JTextPane();
            jScrollPane1.setViewportView(panelTexto);
            jScrollPane2.setViewportView(panelTexto2);

            TeoriaAlgoritmo teoriaAlgoritmo=new TeoriaAlgoritmo("insercion");

            String[] texto=teoriaAlgoritmo.getTexto();
            String[] textoCodigo=teoriaAlgoritmo.getTextoCodigo();
            ImageIcon[] imagenes=teoriaAlgoritmo.getIcons();

            SimpleAttributeSet attrs = new SimpleAttributeSet();
            SimpleAttributeSet attrs2 = new SimpleAttributeSet();
            SimpleAttributeSet attrs3 = new SimpleAttributeSet();

            StyleConstants.setFontFamily(attrs3,"alegreya sans");
            StyleConstants.setFontSize(attrs3,14);
            StyleConstants.setBold(attrs2, true);
            StyleConstants.setAlignment(attrs2,StyleConstants.ALIGN_CENTER);
            StyleConstants.setFontFamily(attrs2,"alegreya sans");
            StyleConstants.setFontSize(attrs2,18);
            try {
                panelTexto.getStyledDocument().insertString(
                        panelTexto.getStyledDocument().getLength(), "Algoritmo de inserción\n\n", attrs2);
                panelTexto2.getStyledDocument().insertString(
                        panelTexto2.getStyledDocument().getLength(), "Algoritmo de inserción\n\n", attrs2);
            } catch (BadLocationException e) {
                e.printStackTrace();
            }
            for(int i=0;i<texto.length;i++){
                try {
                    panelTexto.getStyledDocument().insertString(
                            panelTexto.getStyledDocument().getLength(), texto[i], attrs);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
                if(i<imagenes.length) {
                    panelTexto.setCaretPosition(panelTexto.getStyledDocument().getLength());
                    panelTexto.insertIcon(imagenes[i]);
                }
            }
            for(int i=0;i<textoCodigo.length;i++){
                try {
                    panelTexto2.getStyledDocument().insertString(
                            panelTexto2.getStyledDocument().getLength(), textoCodigo[i], attrs3);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
            }
            panelTexto.setCaretPosition(0);
            panelTexto2.setCaretPosition(0);

            Sortrace.setAlgoritmo(new Insercion(Sortrace.getVector().getVector()));
            Sortrace.getAlgoritmo().ejecutar();
            vistaVector.actualizarVector();

        }else if(boton2.getToolTipText().equals("Retroceder al comienzo")){
            Sortrace.getAlgoritmo().retrocederComienzo();
            this.mostrarPanelVisualizacion();
            boton1.setEnabled(false);
            boton2.setEnabled(true);
            boton3.setEnabled(true);
            boton4.setEnabled(true);
            boton5.setEnabled(true);
            boton6.setEnabled(true);
            boton7.setEnabled(true);
            boton8.setEnabled(true);
            boton9.setEnabled(true);
            boton10.setEnabled(true);
            actualizarBotonesEjecucion();
        }
    }//GEN-LAST:event_boton2MouseClicked

    private void boton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton3MouseClicked
        // TODO add your handling code here:
        if(boton3.getToolTipText().equals("Cargar Datos...")) {
            JFileChooser fileSelector = new JFileChooser();
            fileSelector.setFileSelectionMode(0);
            String dir = "C:\\";
            FiltroTxt filtroTxt = new FiltroTxt();
            fileSelector.addChoosableFileFilter(filtroTxt);
            fileSelector.setFileFilter(filtroTxt);
            fileSelector.setAcceptAllFileFilterUsed(false);
            fileSelector.setCurrentDirectory(new File(dir));
            int opcionCarga = fileSelector.showOpenDialog(this);
            File file = fileSelector.getSelectedFile();

            if (file != null && opcionCarga == 0) {
                FileReader fr = null;
                BufferedReader br = null;
                String nombreFicheroCompleto = file.getAbsolutePath();
                String nombreFichero = file.getName();

                try {
                    if (fileSelector.getFileFilter() == null && !file.getName().toLowerCase().endsWith(".txt")) {
                        JOptionPane.showMessageDialog(this, "errorExtensionFichero", "tituloErrorCargarFichero", 0, (Icon) null);
                    } else {
                        String extension = fileSelector.getFileFilter().getDescription();
                        if (!file.getName().toLowerCase().endsWith(extension)) {
                            nombreFicheroCompleto = nombreFicheroCompleto + extension;
                            nombreFichero = nombreFichero + extension;
                        }

                        fr = new FileReader(nombreFicheroCompleto);
                        br = new BufferedReader(fr);
                        String vectorFichero = br.readLine();
                        Sortrace.getVector().cargarDeFichero(vectorFichero);
                        String messageOK = "\"" + nombreFichero + "\" " + "exitoCargar";
                        JOptionPane.showMessageDialog(this, messageOK, "tituloExitoCargar", 1, (Icon) null);
                    }
                } catch (FileNotFoundException var25) {
                    JOptionPane.showMessageDialog(this, "El fichero no existe", "Error al cargar el archivo", 0, (Icon) null);
                } catch (IOException var26) {
                    JOptionPane.showMessageDialog(this, "Se ha producido un error al cargar el archivo", "Error de entrada/salida", 0, (Icon) null);
                } catch (NumberFormatException var27) {
                    JOptionPane.showMessageDialog(this, "Los datos introducidos no son válidos", "Error de entrada/salida", 0, (Icon) null);
                } finally {
                    try {
                        if (fr != null) {
                            fr.close();
                        }
                    } catch (IOException var24) {
                        JOptionPane.showMessageDialog(this, "Se ha producido un error al cargar el archivo", "Error de entrada/salida", 0, (Icon) null);
                    }

                }
            }
            Sortrace.getPantalla().actualizarBotonesArchivo();
        }else if(boton3.getToolTipText().equals("Burbuja básica")){
            //panelTexto.removeAll();
            panelTexto = new JTextPane();
            panelTexto2 = new JTextPane();

            jScrollPane1.setViewportView(panelTexto);
            jScrollPane2.setViewportView(panelTexto2);

            TeoriaAlgoritmo teoriaAlgoritmo=new TeoriaAlgoritmo("burbujabasica");

            String[] texto=teoriaAlgoritmo.getTexto();
            String[] textoCodigo=teoriaAlgoritmo.getTextoCodigo();
            ImageIcon[] imagenes=teoriaAlgoritmo.getIcons();

            SimpleAttributeSet attrs = new SimpleAttributeSet();
            SimpleAttributeSet attrs2 = new SimpleAttributeSet();
            SimpleAttributeSet attrs3 = new SimpleAttributeSet();

            StyleConstants.setFontFamily(attrs3,"alegreya sans");
            StyleConstants.setFontSize(attrs3,14);
            StyleConstants.setBold(attrs2, true);
            StyleConstants.setAlignment(attrs2,StyleConstants.ALIGN_CENTER);
            StyleConstants.setFontFamily(attrs2,"alegreya sans");
            StyleConstants.setFontSize(attrs2,18);
            try {
                panelTexto.getStyledDocument().insertString(
                        panelTexto.getStyledDocument().getLength(), "Burbuja básica\n\n", attrs2);
                panelTexto2.getStyledDocument().insertString(
                        panelTexto2.getStyledDocument().getLength(), "Burbuja básica\n\n", attrs2);
            } catch (BadLocationException e) {
                e.printStackTrace();
            }
            for(int i=0;i<texto.length;i++){
                try {
                    panelTexto.getStyledDocument().insertString(
                            panelTexto.getStyledDocument().getLength(), texto[i], attrs);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
                if(i<imagenes.length) {
                    panelTexto.setCaretPosition(panelTexto.getStyledDocument().getLength());
                    panelTexto.insertIcon(imagenes[i]);
                }
            }
            for(int i=0;i<textoCodigo.length;i++){
                try {
                    panelTexto2.getStyledDocument().insertString(
                            panelTexto2.getStyledDocument().getLength(), textoCodigo[i], attrs3);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
            }
            panelTexto.setCaretPosition(0);
            panelTexto2.setCaretPosition(0);
            Sortrace.setAlgoritmo(new BurbujaBasica(Sortrace.getVector().getVector()));
            Sortrace.getAlgoritmo().ejecutar();
            vistaVector.actualizarVector();
        }else if(boton3.getToolTipText().equals("Retroceder al comienzo de la iteracion")){
            Sortrace.getAlgoritmo().retrocederIteracion();
            this.mostrarPanelVisualizacion();
            boton1.setEnabled(false);
            boton2.setEnabled(true);
            boton3.setEnabled(true);
            boton4.setEnabled(true);
            boton5.setEnabled(true);
            boton6.setEnabled(true);
            boton7.setEnabled(true);
            boton8.setEnabled(true);
            boton9.setEnabled(true);
            boton10.setEnabled(true);
            actualizarBotonesEjecucion();
        }
    }

    private void boton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton4MouseClicked
        // TODO add your handling code here:
        if(boton4.getToolTipText().equals("Modificar Datos...")){
            intNum =new IntroducirNumeros_IU(true);
        }else if(boton4.getToolTipText().equals("Burbuja avanzada")){
            //panelTexto.removeAll();
            panelTexto = new JTextPane();
            panelTexto2 = new JTextPane();

            jScrollPane1.setViewportView(panelTexto);
            jScrollPane2.setViewportView(panelTexto2);

            TeoriaAlgoritmo teoriaAlgoritmo=new TeoriaAlgoritmo("burbujaavanzada");

            String[] texto=teoriaAlgoritmo.getTexto();
            String[] textoCodigo=teoriaAlgoritmo.getTextoCodigo();
            ImageIcon[] imagenes=teoriaAlgoritmo.getIcons();

            SimpleAttributeSet attrs = new SimpleAttributeSet();
            SimpleAttributeSet attrs2 = new SimpleAttributeSet();
            SimpleAttributeSet attrs3 = new SimpleAttributeSet();

            StyleConstants.setFontFamily(attrs3,"alegreya sans");
            StyleConstants.setFontSize(attrs3,14);
            StyleConstants.setBold(attrs2, true);
            StyleConstants.setAlignment(attrs2,StyleConstants.ALIGN_CENTER);
            StyleConstants.setFontFamily(attrs2,"alegreya sans");
            StyleConstants.setFontSize(attrs2,18);
            try {
                panelTexto.getStyledDocument().insertString(
                        panelTexto.getStyledDocument().getLength(), "Burbuja avanzada\n\n", attrs2);
                panelTexto2.getStyledDocument().insertString(
                        panelTexto2.getStyledDocument().getLength(), "Burbuja avanzada\n\n", attrs2);
            } catch (BadLocationException e) {
                e.printStackTrace();
            }
            for(int i=0;i<texto.length;i++){
                try {
                    panelTexto.getStyledDocument().insertString(
                            panelTexto.getStyledDocument().getLength(), texto[i], attrs);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
                if(i<imagenes.length) {
                    panelTexto.setCaretPosition(panelTexto.getStyledDocument().getLength());
                    panelTexto.insertIcon(imagenes[i]);
                }
            }
            for(int i=0;i<textoCodigo.length;i++){
                try {
                    panelTexto2.getStyledDocument().insertString(
                            panelTexto2.getStyledDocument().getLength(), textoCodigo[i], attrs3);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
            }
            panelTexto.setCaretPosition(0);
            panelTexto2.setCaretPosition(0);

            Sortrace.setAlgoritmo(new BurbujaAvanzada(Sortrace.getVector().getVector()));
            Sortrace.getAlgoritmo().ejecutar();
            vistaVector.actualizarVector();
        }else if(boton4.getToolTipText().equals("Retroceder un paso")){
            Sortrace.getAlgoritmo().retrocederPaso();
            this.mostrarPanelVisualizacion();
            boton1.setEnabled(false);
            boton2.setEnabled(true);
            boton3.setEnabled(true);
            boton4.setEnabled(true);
            boton5.setEnabled(true);
            boton6.setEnabled(true);
            boton7.setEnabled(true);
            boton8.setEnabled(true);
            boton9.setEnabled(true);
            boton10.setEnabled(true);
            actualizarBotonesEjecucion();
        }
    }//GEN-LAST:event_boton4MouseClicked
    private void boton5MouseClicked(java.awt.event.MouseEvent evt) throws InterruptedException {//GEN-FIRST:event_boton3MouseClicked
        // TODO add your handling code here:
        if(boton5.getToolTipText().equals("Almacenar Ficheros...")) {
            JFileChooser fileSelector = new JFileChooser();
            fileSelector.setFileSelectionMode(0);
            String dir = "C:\\";
            FiltroTxt filtroTxt = new FiltroTxt();
            fileSelector.addChoosableFileFilter(filtroTxt);
            fileSelector.setFileFilter(filtroTxt);
            fileSelector.setAcceptAllFileFilterUsed(false);
            fileSelector.setCurrentDirectory(new File(dir));
            int opcionGuardar = fileSelector.showOpenDialog(this);
            File file = fileSelector.getSelectedFile();

            if (file != null && opcionGuardar == 0) {
                FileWriter fw = null;
                PrintWriter pw = null;
                String nombreFicheroCompleto = file.getAbsolutePath();
                String nombreFichero = file.getName();

                try {
                    if (fileSelector.getFileFilter() == null && !file.getName().toLowerCase().endsWith(".txt")) {
                        JOptionPane.showMessageDialog(this, "errorExtensionFichero", "tituloErrorGuardarFichero", 0, (Icon) null);
                    } else {
                        String extension = fileSelector.getFileFilter().getDescription();
                        if (!file.getName().toLowerCase().endsWith(extension)) {
                            nombreFicheroCompleto = nombreFicheroCompleto + extension;
                            nombreFichero = nombreFichero + extension;
                        }

                        if (!file.exists() || this.sobrescribirArchivo()) {
                            fw = new FileWriter(nombreFicheroCompleto);
                            pw = new PrintWriter(fw);
                            Vector vector = Sortrace.getVector();
                            vector.escribirEnFichero(pw);
                            String messageOK = "\"" + nombreFichero + "\" " + "exitoGuardar";
                            JOptionPane.showMessageDialog(this, messageOK, "tituloExitoGuardar", 1, (Icon) null);
                        }
                    }
                } catch (FileNotFoundException var23) {
                    JOptionPane.showMessageDialog(this, "ficheroNoEncontrado", "tituloFicheroNoEncontradoGuardar", 0, (Icon) null);
                } catch (IOException var24) {
                    JOptionPane.showMessageDialog(this, "ioExceptionGuardar", "tituloIOException", 0, (Icon) null);
                } finally {
                    try {
                        if (fw != null) {
                            fw.close();
                        }
                    } catch (IOException var22) {
                        JOptionPane.showMessageDialog(this, "ioExceptionGuardar", "tituloIOException", 0, (Icon) null);
                    }

                }
            }
        }else if(boton5.getToolTipText().equals("Incrementos decrecientes")){
            //panelTexto.removeAll();
            panelTexto = new JTextPane();
            panelTexto2 = new JTextPane();

            jScrollPane1.setViewportView(panelTexto);
            jScrollPane2.setViewportView(panelTexto2);

            TeoriaAlgoritmo teoriaAlgoritmo=new TeoriaAlgoritmo("shell");
            String[] texto=teoriaAlgoritmo.getTexto();
            String[] textoCodigo=teoriaAlgoritmo.getTextoCodigo();
            ImageIcon[] imagenes=teoriaAlgoritmo.getIcons();

            SimpleAttributeSet attrs = new SimpleAttributeSet();
            SimpleAttributeSet attrs2 = new SimpleAttributeSet();
            SimpleAttributeSet attrs3 = new SimpleAttributeSet();

            StyleConstants.setFontFamily(attrs3,"alegreya sans");
            StyleConstants.setFontSize(attrs3,14);
            StyleConstants.setBold(attrs2, true);
            StyleConstants.setAlignment(attrs2,StyleConstants.ALIGN_CENTER);
            StyleConstants.setFontFamily(attrs2,"alegreya sans");
            StyleConstants.setFontSize(attrs2,18);
            try {
                panelTexto.getStyledDocument().insertString(
                        panelTexto.getStyledDocument().getLength(), "Incrementos decrecientes\n\n", attrs2);
                panelTexto2.getStyledDocument().insertString(
                        panelTexto2.getStyledDocument().getLength(), "Incrementos decrecientes\n\n", attrs2);
            } catch (BadLocationException e) {
                e.printStackTrace();
            }
            for(int i=0;i<texto.length;i++){
                try {
                    panelTexto.getStyledDocument().insertString(
                            panelTexto.getStyledDocument().getLength(), texto[i], attrs);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
                if(i<imagenes.length) {
                    panelTexto.setCaretPosition(panelTexto.getStyledDocument().getLength());
                    panelTexto.insertIcon(imagenes[i]);
                }
            }
            for(int i=0;i<textoCodigo.length;i++){
                try {
                    panelTexto2.getStyledDocument().insertString(
                            panelTexto2.getStyledDocument().getLength(), textoCodigo[i], attrs3);
                } catch (BadLocationException e) {
                    e.printStackTrace();
                }
            }
            panelTexto.setCaretPosition(0);
            panelTexto2.setCaretPosition(0);

            Sortrace.setAlgoritmo(new Shell(Sortrace.getVector().getVector()));
            Sortrace.getAlgoritmo().ejecutar();
            vistaVector.actualizarVector();
        }else if(boton5.getToolTipText().equals("Retroceder continuo")) {
            Sortrace.getAlgoritmo().retrocederContinuo();
            this.mostrarPanelVisualizacion();
            boton1.setEnabled(true);
            boton2.setEnabled(false);
            boton3.setEnabled(false);
            boton4.setEnabled(false);
            boton5.setEnabled(false);
            boton6.setEnabled(false);
            boton7.setEnabled(false);
            boton8.setEnabled(false);
            boton9.setEnabled(false);
            boton10.setEnabled(true);
            //actualizarBotonesEjecucion();
        }
    }
    private void boton6MouseClicked(java.awt.event.MouseEvent evt) throws InterruptedException {//GEN-FIRST:event_boton4MouseClicked
        // TODO add your handling code here:
        if(boton6.getToolTipText().equals("Avanzar continuo")) {
            Sortrace.getAlgoritmo().avanzarContinuo();
            this.mostrarPanelVisualizacion();
            boton1.setEnabled(true);
            boton2.setEnabled(false);
            boton3.setEnabled(false);
            boton4.setEnabled(false);
            boton5.setEnabled(false);
            boton6.setEnabled(false);
            boton7.setEnabled(false);
            boton8.setEnabled(false);
            boton9.setEnabled(false);
            boton10.setEnabled(true);

        }
    }
    private void boton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton4MouseClicked
        // TODO add your handling code here:
        if(boton7.getToolTipText().equals("Avanzar Paso...")) {
            intNum = new IntroducirNumeros_IU(true);
        }else if(boton7.getToolTipText().equals("Avanzar un paso")){
            Sortrace.getAlgoritmo().avanzarPaso();
            try {
                sleep(200);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            this.mostrarPanelVisualizacion();
            boton1.setEnabled(false);
            boton2.setEnabled(true);
            boton3.setEnabled(true);
            boton4.setEnabled(true);
            boton5.setEnabled(true);
            boton6.setEnabled(true);
            boton7.setEnabled(true);
            boton8.setEnabled(true);
            boton9.setEnabled(true);
            boton10.setEnabled(true);
            actualizarBotonesEjecucion();
        }
    }
    private void boton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton4MouseClicked
        // TODO add your handling code here:
        if(boton8.getToolTipText().equals("Avanzar al final de la iteracion")){
            Sortrace.getAlgoritmo().avanzarIteracion();
            try {
                sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            this.mostrarPanelVisualizacion();
            boton1.setEnabled(false);
            boton2.setEnabled(true);
            boton3.setEnabled(true);
            boton4.setEnabled(true);
            boton5.setEnabled(true);
            boton6.setEnabled(true);
            boton7.setEnabled(true);
            boton8.setEnabled(true);
            boton9.setEnabled(true);
            boton10.setEnabled(true);
            actualizarBotonesEjecucion();
        }
    }
    private void boton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton9MouseClicked
        if(boton9.getToolTipText().equals("Salir")){
            this.dispose();
        }else if(boton9.getToolTipText().equals("Avanzar al final")){
            Sortrace.getAlgoritmo().avanzarFinal();
            try {
                sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            this.mostrarPanelVisualizacion();
            boton1.setEnabled(false);
            boton2.setEnabled(true);
            boton3.setEnabled(true);
            boton4.setEnabled(true);
            boton5.setEnabled(true);
            boton6.setEnabled(true);
            boton7.setEnabled(true);
            boton8.setEnabled(true);
            boton9.setEnabled(true);
            boton10.setEnabled(true);
            actualizarBotonesEjecucion();
        }
    }
    private void boton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton9MouseClicked
        if(boton10.getToolTipText().equals("Abandonar ejecucion")){
            Sortrace.getAlgoritmo().terminar();
            vistaVector.actualizarVector();
            boton1.setEnabled(false);
            boton2.setEnabled(false);
            boton3.setEnabled(false);
            boton4.setEnabled(false);
            boton5.setEnabled(false);
            boton6.setEnabled(false);
            boton7.setEnabled(false);
            boton8.setEnabled(false);
            boton9.setEnabled(false);
            boton10.setEnabled(false);
        }
    }
    public void actualizarBotonesArchivo(){
        if(Sortrace.getVector().getVector()==null){
            boton4.setEnabled(false);
            boton5.setEnabled(false);
            boton6.setEnabled(false);
            boton7.setEnabled(false);
            boton8.setEnabled(false);
            boton9.setEnabled(false);
        }else{
            boton4.setEnabled(true);
            boton5.setEnabled(true);
            boton6.setEnabled(true);
            boton7.setEnabled(true);
            boton8.setEnabled(true);
            boton9.setEnabled(true);
        }
    }
    public void actualizarBotonesEjecucion(){
        if(Sortrace.getAlgoritmo()==null) {
            boton1.setEnabled(false);
            boton2.setEnabled(false);
            boton3.setEnabled(false);
            boton4.setEnabled(false);
            boton5.setEnabled(false);
            boton6.setEnabled(false);
            boton7.setEnabled(false);
            boton8.setEnabled(false);
            boton9.setEnabled(false);
            boton10.setEnabled(false);
        }else if(Sortrace.getAlgoritmo().IsFinal()){
            boton1.setEnabled(false);
            boton2.setEnabled(true);
            boton3.setEnabled(true);
            boton4.setEnabled(true);
            boton5.setEnabled(true);
            boton6.setEnabled(false);
            boton7.setEnabled(false);
            boton8.setEnabled(false);
            boton9.setEnabled(false);
            boton10.setEnabled(true);
        }else if(Sortrace.getAlgoritmo().IsComienzo()){
            boton1.setEnabled(false);
            boton2.setEnabled(false);
            boton3.setEnabled(false);
            boton4.setEnabled(false);
            boton5.setEnabled(false);
            boton6.setEnabled(true);
            boton7.setEnabled(true);
            boton8.setEnabled(true);
            boton9.setEnabled(true);
            boton10.setEnabled(true);
        }
    }
    private boolean sobrescribirArchivo() {
        Object[] options = new Object[]{"Aceptar", "Cancelar"};
        int opcion = JOptionPane.showOptionDialog(this, "sobrescribirArchivo", "tituloGuardar", -1, 2, (Icon)null, options, options[0]);
        return opcion == 0;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pantalla().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton1;
    private javax.swing.JButton boton10;
    private javax.swing.JButton boton2;
    private javax.swing.JButton boton3;
    private javax.swing.JButton boton4;
    private javax.swing.JButton boton5;
    private javax.swing.JButton boton6;
    private javax.swing.JButton boton7;
    private javax.swing.JButton boton8;
    private javax.swing.JButton boton9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private JPanel panelVisualizacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenu menuAlgoritmos;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuConfiguracion;
    private javax.swing.JMenu menuEjecucion;
    private javax.swing.JTextPane panelTexto;
    private javax.swing.JTextPane panelTexto2;
    private VistaVector vistaVector;
    private Dimension dimPred;
    // End of variables declaration//GEN-END:variables
    private IntroducirNumeros_IU intNum;
}
