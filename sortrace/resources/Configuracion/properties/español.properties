#Titulo
titulo=Sortrace - Sistema de visualizaci\u00f3n acumulativa en algoritmos de ordenaci\u00f3n
tituloSeleccion=Sortrace - Sistema de visualizaci\u00f3n acumulativa en algoritmos de ordenaci\u00f3n [Selecci\u00f3n]
tituloInsercion=Sortrace - Sistema de visualizaci\u00f3n acumulativa en algoritmos de ordenaci\u00f3n [Inserci\u00f3n]
tituloBurbujaBasico=Sortrace - Sistema de visualizaci\u00f3n acumulativa en algoritmos de ordenaci\u00f3n [Burbuja b\u00e1sico]
tituloBurbujaOptimizado=Sortrace - Sistema de visualizaci\u00f3n acumulativa en algoritmos de ordenaci\u00f3n [Burbuja optimizado]
tituloIncrementos=Sortrace - Sistema de visualizaci\u00f3n acumulativa en algoritmos de ordenaci\u00f3n [Incrementos decrecientes]
tituloRapida=Sortrace - Sistema de visualizaci\u00f3n acumulativa en algoritmos de ordenaci\u00f3n [R\u00e1pida]

#Menu
menuArchivo=Archivo
menuEjecucion=Ejecuci\u00f3n
menuAlgoritmo=Seleccionar algoritmo
menuConfiguracion=Configuraci\u00f3n
menuAyuda=Ayuda

#Archivo
archivoIntroducirDatos=Introducir datos...
archivoGeneradDatos=Generar datos aleatorios...
archivoCargarDatos=Cargar datos...
archivoModificarDatos=Modificar datos...
archivoAlmacenarFicheros=Almacenar ficheros...
archivoExportarImagen=Exportar imagen...
archivoExportarSecuencia=Exportar secuencia de imagenes...
archivoExportarAnimacion=Exportar animacion...
archivoSalir=Salir

#Ejecucion
ejecucionPausa=Pausa
ejecucionRetrocederComienzo=Retroceder al comienzo
ejecucionRetrocederIteracion=Retroceder al comienzo de la iteracion
ejecucionRetrocederPaso=Retroceder un paso
ejecucionRetrocederContinuo=Retroceder continuo
ejecucionAvanzarContinuo=Avanzar continuo
ejecucionAvanzarPaso=Avanzar un paso
ejecucionAvanzarIteracion=Avanzar al final de la iteracion
ejecucionAvanzarFinal=Avanzar al final
ejecucionAbandonarEjecucion=Abandonar ejecucion

#ALgoritmos
algoritmosTextoSeleccion=<html><p align=\"center\">Algoritmo de</p><p align=\"center\">selección</p></html>
algortimosToolSeleccion=Algoritmo de selección
algoritmosTextoInsercion=<html><p align=\"center\">Algoritmo de</p><p align=\"center\">inserción</p></html>
algortimosToolInsercion=Algoritmo de inserción
algoritmosTextoBurbujaBasica=<html><p align=\"center\">Burbuja</p><p align=\"center\">básica</p></html>
algortimosToolBurbujaBasica=Burbuja básica
algoritmosTextoBurbujaAvanzada=<html><p align=\"center\">Burbuja</p><p align=\"center\">optimizada</p></html>
algortimosToolBurbujaAvanzada=Burbuja optimizada
algoritmosTextoShell=<html><p align=\"center\">Incrementos</p><p align=\"center\">decrecientes</p></html>
algortimosToolShell=Incrementos decrecientes

#Configuracion
configuracionVisualizacion=Visualizacion...
configuracionIdioma=Idioma...
configuracionAnimacion=Animacion...

#Ayuda
ayudaSortrace=Ayuda de Sortrace...
ayudaSobreSortrace=Sobre Sortrace

#FrameIntroducirDatos
introducirDatosTitulo=Introducir Datos
introducirDatosBotonAceptar=Aceptar
introducirDatosBotonCancelar=Cancelar
introducirDatosEtiquetaTamano=Introduzca el tamaño del vector
introducirDatosPosicion=Posicion
introducirDatosElemento=Elemento
introducirDatosEtiquetaEntrada=Introduzca los datos de entrada del vector
introducirDatosErrorMensajeFormato=Los datos introducidos no son validos: debe introducir numeros
introducirDatosErrorTituloFormato=Error de formato
introducirDatosTituloExito=Exito
introducirDatosMensajeExito=Exito al crear el vector


#FrameGenerarDatosAleatorios
generarDatosTitulo=Generar Datos Aleatorios
generarDatosAtajo=¿Quieres generar un vector completamente aleatorio o personalizar algunos parametros?
generarDatosPersonalizar=Personalizar
generarDatosAleatorio=Aleatorio
generarDatosEtiquetaTamaño=Tamaño vector
generarDatosEtiquetaIntervalo=Intervalo de valores del vector
generarDatosEtiquetaAviso=Los elementos del vector deben estar entre [-999...999]
generarDatosOrden=Orden
generarDatosOrdenAleatorio=Aleatorio
generarDatosOrdenCreciente=Orden creciente
generarDatosOrdenDereciente=Orden decreciente
generarDatosBotonAceptar=Aceptar
generarDatosBotonCancelar=Cancelar
generarDatosLimitesMensaje=El limite inferior introducido debe ser menos que el limite superior
generarDatosLimitesTitulo=Error con los limites
generarDatosLimiteInferiorMensaje=El limite inferior no puede ser inferior a -999
generarDatosLimiteInferiorTitulo=Error limite inferior
generarDatosLimInfVacioMensaje=Limite inferior por defecto -999
generarDatosLimInfVacioTitulo=Limite inferior vacio
generarDatosLimiteSuperiorMensaje=El limite superior no puede ser superior a 999
generarDatosLimiteSuperiorTitulo=Error limite superior
generarDatosLimSupVacioMensaje=Limite superior por defecto 999
generarDatosLimSupVacioTitulo=Limite superior vacio

#ModificarDatos
modificarDatosTitulo=Modificar Datos

#PanelTeoria
teoriaTitulo=Teoria
teoriaPaginaTeoria=Algoritmo
teoriaPaginaCodigo=Codigo
teoriaSeleccion1=El algoritmo de selección directa realiza una secuencia de iteraciones, de forma que, en cada iteración, se selecciona el elemento más pequeño de la parte del vector aún desordenada y se coloca a continuación de la parte ordenada.\n Por concretar, podemos imaginar que el vector está partido en dos partes, una parte ya ordenada situada a la izquierda y otra aún desordenada situada a la derecha. Inicialmente la parte izquierda ordenada está vacía. En las figuras, separamos ambas partes mediante una barra gruesa vertical. Por ejemplo, sea el siguiente vector:\n
teoriaSeleccion2=\nLa primera iteración va a seleccionar el elemento más pequeño de la parte desordenada (el 1) e intercambiarlo con la celda que está a la derecha de la parte ordenada (el 8). Dado que el algoritmo debe conseguirlo para un vector con un contenido cualquiera, se determina cuál es el elemento menor mediante la comparación de todas las celdas de la parte desordenada, desde su extremo derecho hasta su extremo izquierdo. Tras esta iteración, la parte ordenada ya tiene un elemento y la parte desordenada, el resto.\n
teoriaSeleccion3=\nEn la siguiente iteración, se vuelve a determinar el siguiente elemento menor (el 2) comparando las celdas desde el extremo derecho del vector hasta la separación con la parte ordenada. Una vez determinado, se intercambiará con el elemento situado a la derecha de la parte ordenada (el 8). Tras esta iteración, la parte ordenada ya tiene dos elementos.\n
teoriaSeleccion4=\nEl proceso descrito se repetirá hasta que en la parte desordenada quede un solo elemento (el 8), que será mayor que todos los demás y por tanto no hará falta realizar una última iteración porque ya estará ordenado el vector completo.\n
teoriaSeleccion5=\nEl algoritmo de selección directa tiene una complejidad cuadrática. Su análisis es prácticamente igual que el de la burbuja ya que los bucles están controlados por índices de forma muy parecida, variando solamente en otras operaciones, que son de coste constante. Sea n la longitud del vector. La función de tiempo del algoritmo es igual a:\n
teoriaSeleccion6=\nObsérvese que el bucle interior contiene una instrucción condicional. Siendo estrictos, deberíamos realizar un análisis del algoritmo distinguiendo entre caso mejor, peor y medio, ya que el cuerpo de la instrucción condicional se ejecutará o no según el caso. Sin embargo, el número de iteraciones no varía, por lo que la función de tiempo para dichos casos varía en factores constantes, pero no varía su orden de complejidad cuadrático.
teoriaBurbujaBasica1=El algoritmo de la burbuja se denomina así porque realiza una secuencia de iteraciones, de forma que, en cada una, el elemento más pequeño de una parte del vector se desplaza hacia la otra parte, como una "burbuja" que flota sobre los elementos aún desordenados, más grandes. El desplazamiento se consigue comparando cada par de elementos contiguos desde un extremo hasta el otro.\n Por concretar, supongamos que la burbuja se desplaza hacia la izquierda. Podemos imaginar que el vector está partido en dos partes, una parte ya ordenada y situada a la izquierda y otra aún desordenada situada a la derecha. Inicialmente la parte izquierda ordenada está vacía. Por ejemplo, sea el siguiente vector:\n
teoriaBurbujaBasica2=\nLa primera iteración va hacer "flotar la burbuja" (el elemento más pequeño, el 1) hasta la celda de la izquierda. Dado que el algoritmo debe conseguirlo para un vector con un contenido cualquiera, se compararán sucesivamente dos celdas contiguas desde el extremo derecho hasta la parte izquierda del vector. Como resultado, algunas celdas se han desplazado a la izquierda de su posición original y el elemento menor de todos, hasta el extremo izquierdo. Tras esta iteración, la parte ordenada ya tiene un elemento y la parte desordenada, el resto.\n
teoriaBurbujaBasica3=\nEn la siguiente iteración, puede hacerse el mismo proceso de comparaciones entre celdas contiguas desde el extremo derecho hasta la parte ordenada. Como resultado, algunas celdas se han desplazado a la izquierda de su posición original y el siguiente elemento menor de todos, hasta la derecha del vector ordenado. Tras esta iteración, la mitad ordenada ya tiene dos elementos.\n
teoriaBurbujaBasica4=\nEl proceso descrito se repetirá hasta que en la parte desordenada quede un solo elemento, que será mayor que todos los demás y por tanto ya estará ordenado.\n
teoriaBurbujaBasica5=\nEl algoritmo de la burbuja tiene una complejidad cuadrática. Dado que todas las operaciones que realiza son elementales, basta con fijarnos en los valores distintos que toman los índices de los dos bucles anidados. Sea n la longitud del vector. La función de tiempo del algoritmo es igual a:\n
teoriaBurbujaAvanzada1=El algoritmo de la burbuja optimizada es igual al algoritmo de la burbuja excepto en que, en cada iteración, detecta si se ha producido algún intercambio entre celdas contiguas. Si no se ha producido ningún intercambio, las celdas del vector ya están ordenadas y, por tanto, el algoritmo termina.\n La complejidad del algoritmo de la burbuja optimizada es igual al algoritmo de la burbuja en los casos peor y medio. Sin embargo, en el caso mejor tiene una complejidad lineal. En efecto, en este caso el bucle interno realizará una iteración sin realizar ningún intercambio entre celdas contiguas, tras lo cual el algoritmo terminará su ejecución. Por tanto, el bucle externo termina.\n
teoriaInsercion1=El algoritmo de inserción directa es, en cierto modo, el inverso del algoritmo de selección directa. Realiza una secuencia de iteraciones, de forma que, en cada una, toma el elemento que está situado justo a continuación de la parte ordenada del vector y lo inserta en el lugar adecuado de la parte ya ordenada.\n Por concretar, podemos imaginar que el vector está partido en dos partes, una parte ya ordenada situada a la izquierda y otra aún desordenada situada a la derecha. En lugar de partir de una parte izquierda ordenada vacía, podemos partir de una parte izquierda con un elemento, ya que así también está ordenada. Por ejemplo, sea el siguiente vector:\n
teoriaInsercion2=\nLa primera iteración toma el elemento situado a la derecha de la parte ordenada (el 1), que podemos llamar elemento pivote. Entonces, se recorre la parte izquierda del vector de derecha a izquierda, y va desplazando una posición a la derecha cada elemento que encuentre mayor que el pivote (en este caso, sólo el 8). Esta iteración termina al encontrar un elemento de la parte izquierda menor que el pivote o cuando no queden más elementos por comparar. A continuación, se inserta el elemento pivote en la posición que ocupaba el último elemento desplazado a su derecha.\n
teoriaInsercion3=\nEn la siguiente iteración, tomamos como pivote el elemento situado a la derecha de la parte ordenada (el 7). De nuevo, se recorre la parte izquierda del vector de derecha a izquierda, desplazando una posición a la derecha cada elemento que encuentre mayor que el pivote (en este caso, el 8 de nuevo). Esta iteración termina al encontrar un elemento de la parte izquierda menor que el pivote (el 1) e inserta el elemento pivote en la posición que ocupaba el último elemento desplazado a su derecha (el 8). Tras esta iteración, la parte ordenada ya tiene dos elementos.\n
teoriaInsercion4=\nEl proceso descrito se repetirá hasta que la parte desordenada quede vacía y por tanto ya estará ordenado el vector completo.\n
teoriaInsercion5=\nEl análisis de complejidad del algoritmo de inserción directa es algo más complejo que el de otros algoritmos. El bucle interno tiene una condición compuesta que hace que el número de repeticiones no sólo dependa del tamaño del vector sino también de su contenido. Por tanto, hay que distinguir entre los casos mejor, peor y medio.\n En el caso mejor, el bucle interno nunca se ejecuta. Dado que esto no puede suceder por los valores de los índices, sucede porque no se cumple la segunda parte de la condición del bucle, es decir, cuando v[i-1] \u2264 v[i], para 1 \u2264 i \u2264 n-1. Esta situación se da cuando el vector está ordenado inicialmente. En este caso, la función de tiempo del algoritmo es igual a:\n
teoriaInsercion6=\nEn el caso peor, el bucle interno itera el máximo número de veces permitido por los índices, lo cual exige que la segunda parte de la condición del bucle siempre se cumpla, es decir, que v[i-1]>v[i], para 1 \u2264 i \u2264 n-1. Esta situación se da cuando el vector está inicialmente ordenado en orden inverso. En este caso, la función de tiempo del algoritmo es igual a:\n
teoriaInsercion7=\nEn el caso medio, el bucle interno itera la mitad del máximo número de veces permitido por los índices. El análisis resultante es parecido al del caso peor, obteniéndose que T(n) = \u03B8(n\u00B2).\n
teoriaShell1=El algoritmo de Shell se denomina así en honor a que lo inventó Donald Shell en 1959. También se conoce como algoritmo de ordenación por incrementos decrecientes. Se basa en la observación de que algunos algoritmos de ordenación directa, como el de la burbuja o el de inserción, desplazan elementos pequeños a la izquierda a costa de muchos intercambios debido a que sólo comparan celdas adyacentes. Si se compararan celdas situadas a mayor distancia, podría acelerarse la ordenación.\n La versión que presentamos se basa en el algoritmo de la burbuja y utiliza incrementos que son potencias de dos, con una complejidad\nT(n) = \u03B8(n\u00B2). Pueden obtenerse versiones más eficientes a partir del algoritmo de inserción directa y utilizando otros valores para los incrementos.\n Por ejemplo, sea el siguiente vector, de longitud 8:\n
teoriaShell2=\nComenzamos utilizando un incremento igual a la mitad de la longitud del vector. Por tanto, aplicamos el algoritmo de la burbuja a celdas cuya distancia es 4. Solamente se realiza una iteración.\n
teoriaShell3=\nA continuación, se vuelve a aplicar el algoritmo de la burbuja con un incremento de tamaño la mitad del anterior, es decir 2. Esta vez se necesitan tres iteraciones, aunque para este vector concreto basta con una para que quede ordenado con incrementos 2.\n
teoriaShell4=\nObsérvese que el vector está ordenado si comparamos las celdas con incrementos 2 y 4, pero aún falta que lo esté con incremento 1.\n Por último, realizamos el mismo proceso con incremento igual a la unidad. Aunque harían falta siete iteraciones en el caso peor, el vector ya está "bastante ordenado", por lo que, para este ejemplo, sólo se necesitan tres iteraciones.\n

#PanelVisualizacion
visualizacionRendimiento=Rendimiento:
visualizacionColumnas=Columnas 
visualizacionComparaciones=Comparaciones 
visualizacionAsignaciones=Asignaciones
visualizacionComparacion=Comparación
visualizacionAsignacion=Asignación
visualizacionFijados=Contenido definitivo
visualizacionNoFijados=Contenido provisional
visualizacionIncrementos=Incrementos 
visualizacionIteracion=Iteracion 
visualizacionBotonActivar=Activar
visualizacionBotonDesactivar=Desactivar


#MensajesErrorCargar
errorTituloFileNotFound=Error al cargar el archivo
errorMensajeFileNotFound=El fichero no existe
errorTituloIOException=Error de entrada/salida
errorMensajeIOException=Se ha producido un error al cargar el archivo
errorTituloNumberFormat=Error de entrada/salida
errorMensajeNumberFormat=Los datos introducidos no son válidos

#MensajesErrorGuardar
errorExtensionFichero=El fichero no tiene el formato adecuado
errorTituloGuardarFileNotFound=Error de escritura
errorMensajeGuardarFileNotFound=El fichero no existe
errorMensajeIOExceptionGuardar=Se ha producido un error al guardar el archivo
errorTituloIOExceptionGuardar=Error de entrada/salida
tituloErrorExtensionImagen=Error extension

#Idioma
idiomaEspanol=Español
idiomaIngles=Inglés
idiomaSeleccionMensaje=Selecciona el idioma
idiomaSeleccionTitulo=Seleccion de idioma
idiomaCambioMensaje=¿Esta segur@ que desea cambiar el idioma?
idiomaCambioTitulo=Cambio de idioma


#Visualizacion
tituloVisualizacion=Visualización
encabezamientoVisualizacion=Modifique los ajustes según desee
visualizacionTextoColorAsignacion= Color de las asignaciones
visualizacionTextoColorComparacion= Color de las comparaciones
visualizacionTextoColorFijado= Color contenido definitivo
visualizacionTextoModoOscuro= Modo oscuro

guardarExito= se ha guardado corretamente
guardarExitoTitulo= Exito al guardar
guardarSecuenciaExito= Se guardo con exito la secuencia de imagenes completa
guardarAnimacionExito= Se guardo con exito la animacion completa

cargarExito= Se cargo el vector correctamente del archivo: 
cargarExitoTitulo= Exito al cargar

#Animacion
tituloAnimacion=Ajustes de animacion
animacionTextoSlider=Seleccione la velocidad de la animación

#AyudaPanelCodigo
ayudaCodigoTitulo=Ayuda panel de codigo
ayudaCodigoMensaje=En la pestaña "Codigo" del panel izquierdo se subrayarán las lineas que se estan ejecutando

#jFileChooser
fileChoserDialogAbrir=Abrir
fileChoserDialogGuardar=Guardar
fileChoserMirarEn=Mirar en
fileChoserAbrir=Abrir
fileChoserCancelar=Cancelar
fileChoserNameLabelText=Nombre archivo
fileChoserFolderLabelText=Nombre Directorio
filesChoserOfTypeLabelText=Tipo de archivo
fileChoseropenButtonToolTipText=Abrir archivo seleccionado
fileChosercancelButtonToolTipText=Cancelar
fileChoserfileNameHeaderText=Nombre Archivo
fileChoserupFolderToolTipText=Subir un nivel
fileChoserhomeFolderToolTipText=Escritorio
fileChosernewFolderToolTipText=Crear nuevo directorio
fileChoserlistViewButtonToolTipText=Lista
fileChosernewFolderButtonText=Crear nuevo directorio
fileChoserrenameFileButtonText=Cambiar nombre archivo
fileChoserdeleteFileButtonText=Eliminar archivo
fileChoserfilterLabelText=Tipo archivo
fileChoserdetailsViewButtonToolTipText=Detalles
fileChoserfileSizeHeaderText=Tamaño
fileChoserfileDateHeaderText=Modificar fecha
fileChoserGuardarEn=Guardar En
fileChoserGuardar=Guardar
fileChoserActualizar=Actualizar
fileChoserAyuda=Ayuda
fileChoserToolTip=Guardar fichero

#Salir
botonSi=Si
botonNo=No
textoSalir=¿Desea salir de la aplicación?
tituloSalir=Salir

#InfoPanel
tituloInfo=Información
infoTextoEnunciado=En el desarrollo de Sortrace han participado:
infoTextoAutor=Autor: Eduardo Expósito García
infoTextoTutor=Tutor: Ángel Velázquez Iturbide